%%%% -*- Mode: LaTeX -*-
%%
%% This is the draft of the 2nd part of EXPRESS/SOS 2018 paper, co-authored by
%% Prof. Davide Sangiorgi and Chun Tian.

\subsection{Coarsest (pre)congruence contained in $\approx$ ($\succeq_{\mathrm{bis}}$)}
\label{s:coarsest}

% The ``coarsest congruence contained in weak bisimilarity ($\approx$)''
% theorem in CCS is somehow special, as its current known proofs either
% rely on quite restricted conditions, or have an extremely complicated proof
% (c.f. van Glabbeek's paper) in
% which ordinal theory is required.  Actually even the relationship
% between its name and statement is not well explained in many CCS
% textbooks. But van Glabbeek's paper has given the so far clearest
% explanation, here we briefly repeat his arguments:

As bisimilarity ($\approx$) is not congruence, for this reason rooted bisimilarity has been
introduced (Def.~\ref{d:rootedBisimilarity}).
In this subsection we discuss two proofs of an important result stating that
rooted bisimilarity is the coarsest congruence contained in
bisimilarity \cite{vanGlabbeek:2005ur,Gorrieri:2015jt,Mil89} (thus it
is the best one):
\begin{equation}
\label{eq:coarsest}
\forall p\ \ q.\ p\ \rapprox\ \! q\ \Leftrightarrow\ ( \forall r.\ p\ +\
r\ \approx\ q\ +\ r )\enspace.
\end{equation}

% : Milner's proof \cite{Mil89}, that requires
% that no process can use all available names; and van Glabbeek's proof
% \cite{vanGlabbeek:2005ur}, that does not require additional assumptions. 

Following \cite{vanGlabbeek:2005ur}, the coarsest congruence
contained in (weak) bisimilarity (we call it \emph{bisimilarity
  congruence} hereafter), can be directly constructed as
the \emph{context closure} (\texttt{CC}) of (weak) bisimilarity:
\begin{alltt}
\HOLthm[def]{CoarsestCongr.WEAK_CONGR}\hfill{[WEAK_CONGR]}
\HOLthm[def]{Congruence.CC_def}\hfill{[CC_def]}
\end{alltt}
\hl{Now we show why this works. For any relation $R$ 
on CCS processes, \emph{no matter if it is (pre)congruence or not},
the context closure of $R$ is always finer}\footnote{\hl{This is why
  we don't need to put $R\ g\ h$ in the antecedent in
\texttt{CC\_def}, as with the trivial context $(\lambda x.\,x)$ it is a conclusion.}} than
$R$: (here $\subseteq_r$ stands for relation inclusion in HOL4.)
\begin{alltt}
\HOLthm[nosp]{Congruence.CC_is_finer}\hfill{[CC_is_finer]}
\end{alltt}
\hl{Furthermore, we have proved that, any (pre)congruence contained in $R$ (which
itself may not be) is contained in the context
closure of $R$ (thus it is the coarsest one):}
\begin{alltt}
\HOLthm[nosp]{Congruence.CC_is_coarsest}\hfill{[CC_is_coarsest]}
\HOLthm[nosp]{Congruence.CC_is_coarsest'}\hfill{[CC_is_coarsest']}
\end{alltt}

Given the central role of the  
 sum operator, we also consider the closure of bisimilarity under such
 operator, called \hl{\emph{equivalence compatible with sums}}
(\texttt{SUM_EQUIV}): %%, denoted by $\approx^+$: (not used this symbol)
\begin{alltt}
\HOLthm[def]{CoarsestCongr.SUM_EQUIV}\hfill{[SUM_EQUIV]}
\end{alltt}


% it doesn't satisfy substitutivity on direct sums (but if the CCS syntax
% is non-standard, i.e.~has only prefixed sums, $\approx$ is indeed a
% congruence). The purpose is to find a coarsest congruence contained in
% weak bisimilarity. (``coarsest'' means, any other congruence finer than it must be contained in it)
% There're two ways to build a congruence from weak bisimilarity, one
% way is the standard definition for observational congruence (rooted
% weak bisimilarity) $\rapprox$ in CCS textbooks, but even it's proven to be a
% congruence we don't know if it's coarsest one.  The other way is to
% build a (pre)congruence closure (Def ??) directly upon
% the original weak bisimilarity relation, we call the resulting
% relation ``Weak bisimilarity congruence'' ($[\approx]$):
% \begin{alltt}
% \HOLthm[def]{CoarsestCongr.WEAK_CONGR}
% \end{alltt}
% It can be shown that any such (pre)congruence closure is automatically coarsest.
%
% Now it remains to prove that, the congrunce relation built by above
% two quite different approaches actually coincide. To achive this goal,
% we first noticed that, all other operators beside sums used in
% semantic context doesn't matter, because they're already substituible
% for weak bisimilarity. The only important operator is the sum
% operator. To focus on this important operator, we can temporily
% introduce another concept called \emph{sum equivalence}:
% \begin{alltt}
% \HOLthm[def]{CoarsestCongr.SUM_EQUIV}
% \end{alltt}
\hl{Rooted bisimilarity $\rapprox$ (a congruence contained in
$\wb$), is now contained in \texttt{WEAK_CONGR},
which in turn is trivially contained in \texttt{SUM_EQUIV}}, as shown
in Fig.~\ref{fig:relationship}. Thus, to prove (\ref{eq:coarsest}),
the crux is to prove that \texttt{SUM_EQUIV} implies
rooted bisimilarity ($\rapprox$), making all three relations
($\rapprox$, \texttt{WEAK_CONGR} and \texttt{SUM_EQUIV}) equivalent:
\begin{equation}
\label{equa:pq}
\forall p\ \ q.\ ( \forall r.\ p\ +\ r \approx q\ +\ r ) \
\Rightarrow\ p\ \rapprox\ \! q  \enspace.
\end{equation}

\begin{figure}[ht]
\begin{displaymath}
\xymatrix@R=2ex{
{\textrm{Weak bisimilarity } (\approx)} & {\textrm{Equiv.
    compatible with sums (\texttt{SUM\_EQUIV})}} \ar@/^3ex/[ldd]^{\subseteq ?}\\
{\textrm{Bisimilarity congruence (\texttt{WEAK\_CONGR})}}
\ar[u]^{\subseteq} \ar[ru]^{\subseteq} \\
{\textrm{Rooted bisimilarity } (\rapprox)} \ar[u]^{\subseteq}
}
\end{displaymath}
\vspace{-2ex}
\caption{\hl{Relationship between several relations}}
\label{fig:relationship}
\end{figure}

The standard argument \cite{Mil89} requires that $p$
and $q$ do not use up all available labels (i.e.~visible actions).
Formalising such an argument requires however 
a detailed treatment on free and bound names of CCS
processes (with the restriction operator being a binder), not done yet.
However, the proof of (\ref{equa:pq}) can be carried out 
% But it's
% not easy to formalize and use such an assumption without a detailed
% treatment on free and bound names (visible actions) of CCS
% processes.\footnote{There're totally four such concepts: 1) free names
% are all visible actions appearing in a CCS term without surrounding
% $\nu$ (restriction) operator on the same action; 2) bound names are
% the set of all actions ever used by $\nu$ (restriction) operator; 3)
% free variables (or equation variables) are those variables without a
% definition given by recursion
% operator; 4) bound variables (process constants) are variables with
% definitions given by recursion operator. All CCS results using these
% concepts are not touched so far, although these four concepts are
% successfully defined using HOL's set and list theories.} However, by
just assuming that all immediate \emph{weak} derivatives of
 $p$ and $q$ do not use up all \hl{available labels}.
% analyzing the proof steps, we found that, what's really required is to
% not use up all available labels in those weak transitions directly
% lead from $p$ and $q$. In another words, even they have used all
% available labels, as long as their first weak transitions didn't, the
% whole proof can still be finished.\footnote{Further more, $p$ and $q$
%   can be considered separately: the proof can be finished as long as
%   \emph{each} of them didn't use up all labels on first weak
%   transition, while the union of these labels are all labels.}
We have formalised this property and
 called it the \emph{free action} property:
\begin{alltt}
\HOLthm[def]{CoarsestCongr.free_action_def}\hfill{[free_action_def]}
\end{alltt}
%
With this property, the actual formalisation of (\ref{equa:pq}) says:
%\begin{theorem}{(Coarsest congruence contained in $\wb$)}
\vspace{-2ex}
\begin{alltt}
\hfill{[COARSEST_CONGR_RL]}
\HOLthm[]{CoarsestCongr.COARSEST_CONGR_RL}
\end{alltt}
%\end{theorem}

For contraction and rooted contraction, the situation and proof
steps are almost identical, and the corresponding HOL theorem says:
%\begin{theorem}{(Coarsest precongruence contained in $\contr$)}
\vspace{-2ex}
\begin{alltt}
\hfill{[COARSEST_PRECONGR_RL]}
\HOLthm[]{Contraction.COARSEST_PRECONGR_RL}
\end{alltt}
%\end{theorem}

The formal proof of above results precisely follows Milner
\cite{Mil89}. \hl{If only $p$ (or $q$) has free actions while the other uses up all available
labels, the classic assumption $\mathrm{fn}(p) \cup
\mathrm{fn}(q) \neq \mathscr{L}$ (here $\mathrm{fn}$ stands for \emph{free
  names}) does not hold, and the proof cannot be finished.} Our
assumption is a bit \emph{weaker}
in the sense that, $p$ and $q$ do not really need to have the
\emph{same} free action (besides, actions like $a$ and $\outC a$ are
\emph{different} here).

\hl{There exists a very different, much more complex proof of (\ref{eq:coarsest}),
given by van Glabbeek} \cite{vanGlabbeek:2005ur}, which does not
require any additional assumption.
The core lemma says, for
any two processes $p$ and $q$, if there exists a \emph{stable} (i.e.~$\tau$-free)
 process $k$ which is not bisimilar with any derivative of $p$ and
 $q$, then \texttt{SUM_EQUIV} indeed implies rooted bisimilarity ($\rapprox$):
\begin{alltt}
\HOLthm{CoarsestCongr.PROP3_COMMON}\hfill{[PROP3_COMMON]}
\end{alltt}
\begin{alltt}
\HOLthm[def]{WeakEQ.STABLE'}\hfill{[STABLE]}
\end{alltt}
\hl{To actually get this process $k$, the proof relies on arbitrary infinite sum of 
processes and uses transfinite induction to obtain
an arbitary large sequence of processes (firstly introduced by Jan
Willem Klop \cite{vanGlabbeek:2005ur})
 that are all pairwise non-bisimilar.} 
We have partially formalised
this proof, because the typed logic
implemented in various HOL systems (including Isabelle/HOL) is not
strong enough to define a type for all possible ordinal values
\cite{norrish2013ordinals}, thus
we have replaced transfinite induction with plain induction. As a
consequence, the final
result is about a restricted class of processes (which we have taken
to be the finite-state processes). This proof uses extensively HOL's
\texttt{pred_set} theory \cite{melham1992hol} and has an interesting mix
of CCS and pure mathematics in it. (c.f. \cite{Tian:2017wrba} for
more details.)
